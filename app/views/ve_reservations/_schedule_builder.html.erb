<% @obj.new_schedules.each_with_index { |s, i| %>
	<%= partial 've_reservations/schedule_fields', s: s, f: f, i: i %>
<% } %>
<tr id="add-schedule-row">
	<th>Add Vehicles/Dates</th>
	<td class="form-inline">
		<a id="add-schedule" href="#"><i class="fa fa-plus-circle"></i> Click to Add Schedule</a>
		<%= hidden_field 'obj[check_new_schedules]', 1 %>
	</td>
</tr>
<script>
	var schedule_count = <%= @obj.new_schedules.size %>;
	var schedule_html = <%= partial('ve_reservations/schedule_fields', f: f, s: {}, i: '__COUNT__').to_json.html_safe %>;
	function init_schedule(s) {
		var f = s.find('.schedule-dates');
		var v = f.val().split(',');
		var mn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
		var opts = {
			numberOfMonths: 3, 
			altField: f,
			changeMonth: true,
			changeYear: true, 
			monthNames: mn,
			monthNamesShort: mn,
			minDate: 0,
			separator: ',',
			dateFormat: 'yy-mm-dd',
			dayNamesMin: ['S', 'M', 'T', 'W', 'T', 'F', 'S']
		}
		if(v[0]) {
			opts.defaultDate = v[0];
			opts.addDates = v;
		}
		var cal = s.find('.mcal').multiDatesPicker(opts);
		s.find('.schedule-ve-vehicle-ids').select2({
			closeOnSelect: false,
			templateSelection: function(data, li) {
				return $(data.element).data('no');
			}
		});
		s.find('.schedule-deselect-all').click(function(e) {
			if(confirm('Are you sure you want to deselect all days?')) {
				e.preventDefault();
				cal.multiDatesPicker('resetDates');
			}
		});
		s.find('.schedule-delete').click(function(e) {
			if(confirm('Are you sure you want to remove these scheduled days?')) {
				s.remove();
				number_schedules();
			}
		});
		s.find('.schedule-begin, .schedule-end').inputmask('hh:mm t', {showMaskOnHover: true});
		var date_presets_select = s.find('select[name="date_presets"]');
		date_presets_select.change(function(e) {
			var d1 = s.find('input[name="from"]');
			var d2 = s.find('input[name="to"]');
			var v = date_presets_select.val().split('-');
			var v1 = v[0];
			var v2 = v[1] || v1;
			d1.val(v1);
			d2.val(v2);
			e.preventDefault();
			date_presets_select[0].selectedIndex = 0;
		});
		var get_date_range = function() {
			var d1 = new Date(s.find('input[name="from"]').val());
			var d2 = new Date(s.find('input[name="to"]').val());
			var wdays = []
			s.find('.schedule-wday input:checked').each(function(i, chk) {
				wdays.push(parseInt($(chk).val()));
			});
			if(d1 == 'Invalid Date') d1 = null;
			if(d2 == 'Invalid Date') d2 = null;
			if(!d1 || !d2 || d1 > d2) {
				alert('Invalid date range.');
				return;
			}
			var new_dates = [];
			var today = Date.now();
			d1.setHours(0, 0, 0, 0);
			today.setHours(0, 0, 0, 0);
			if(d1 < today) {
				d1 = today;
			}
			while(d1 <= d2) {
				if(wdays.length == 0 || wdays.indexOf(d1.getDay()) !== -1) {
					new_dates.push(d1.clone());
				}
				d1 = d1.add(1).day();
			}
			return new_dates;
		}
		s.find('.schedule-select-dates').click(function(e) {
			e.preventDefault();			
			add_dates = get_date_range();
			if(add_dates) {
				cal.datepicker('setDate', add_dates[0]);
				cal.multiDatesPicker('addDates', add_dates);
			}
		});
		s.find('.schedule-deselect-dates').click(function(e) {
			e.preventDefault();			
			rem_dates = get_date_range();
			if(rem_dates) {
				cal.multiDatesPicker('removeDates', rem_dates);
			}
		});		
	}
	$('#add-schedule').click(function(e) {
		e.preventDefault();
		var s = $(schedule_html.replace(/__COUNT__/g, schedule_count));
		schedule_count++;
		$('#add-schedule-row').before(s);
		init_schedule(s);
		number_schedules();
	});
	$('.schedule').each(function(i, e) {
		init_schedule($(e));
	});
	var number_schedules = function() {
		$('.schedule').each(function(i, e) {
			$(e).find('span.num').html(i + 1);
		});
	}
	number_schedules();
</script>