<% content_for(:head) { %>
	<%= stylesheet_link_tag '/fullcalendar-3.7.0/fullcalendar.css' %>
	<%= javascript_include_tag(
		'/fullcalendar-3.7.0/lib/moment.min.js',
		'/fullcalendar-3.7.0/fullcalendar.js'
	) %>
<style>
	.fc-scroller { height: auto !important; }
	.fc-month-view .fc-row { height: auto !important; }
	.fc-toolbar.fc-header-toolbar { margin-bottom: 8px; }
	.fc .fc-toolbar > * > * { margin-left: 8px; }
	.fc-state-hover { background-position: initial; }
	.fc-view a:hover { text-decoration: underline; }
</style>
<% } %>
<%= table_form_for(:filter, html: {id: 'filter'}) { |f| %>
	<%= f.tr_text_field :search, label: 'Search', placeholder: 'Search Vehicles/Reservations' %>
	<%= partial 've_vehicles/filter_active_inactive', f: f %>
	<%= partial 've_vehicles/filter_ve_vehicle_ids', f: f %>
	<tr>
		<th>Go To Date</th>
		<td class="inp-row">
			<%= f.text_field :date, class: 'date', value: @filter.date.class == String ? @filter.date : @filter.date.d %>
			<%= link_to fa('plus-circle', 'New Vehicle Reservation'), {controller: :ve_reservations, action: :new}, id: 'new-res', class: 'btn', target: '_blank' %>
			<%= f.hidden_field :date_from, value: @filter.date_from.class == String ? @filter.date_from : @filter.date_from.d %>
			<%= f.hidden_field :date_to, value: @filter.date_to.class == String ? @filter.date_to : @filter.date_to.d %>
			<%= f.hidden_field :view %>
		</td>
	</tr>
	<tr style="display: none;">
		<th></th>
		<td>
			<button type="submit" name="filter[apply]" value="apply"><i class="fa fa-check"></i> Apply</button>
			<button type="submit" name="filter[clear]" value="clear"><i class="fa fa-close"></i> Clear</button>
			<button type="submit" name="filter[print]" value="print" formtarget="_blank" id="button_print"><i class="fa fa-print"></i> Print</button>
		</td>
	</tr>
	</tr>
<% } %>
<div style="margin: 8px;">
	<div id="calendar"></div>
</div>
<%= form_tag({action: :print_calendar}, {target: '_blank', id: 'print_calendar'}) { %>
	<%= hidden_field_tag 'calendar_html', '' %>
<% } %>
<script>
	$(function() {
		var cal = $('#calendar');
		var filter = $('#filter');
		var date = $('#filter_date');
		var needs_refresh = false;
		var toolbar = null;
		var current_view = 'month';
		var allow_print_submit = false;
		var edit_event = function(event, delta, revertFunc, e, ui, view) {
			if(event.type == 'blackout' && !event.allDay) {
				revertFunc();
				return;
			}
			if(event.type == 've_event') {
				var ed = event.end;
				if(event.allDay && ed) {
					ed = ed.clone().subtract(1, 'day');
				}
				var s = event.start.format('YYYY-MM-DD');
				var e = ed ? ed.format('YYYY-MM-DD') : null;
				if(s && e && s != e) {
					revertFunc();
					return;
				}
			}
			var data = {
				start: event.start.format('YYYY-MM-DD HH:mm:ss'),
				end: event.end ? event.end.format('YYYY-MM-DD HH:mm:ss') : null,
				all_day: event.allDay
			}
			toolbar.addClass('busy-bg');
			$.ajax({
				url: '<%= url_for action: :data_edit %>/' + event.type + '/' + event.id,
				data: {obj: data},
				success: function(data, status, xhr) {
				},
				complete: function(xhr, status) {
					toolbar.removeClass('busy-bg');
				},
				error: function(xhr, status, error) {
					revertFunc();
				}
			});
		}
		cal.fullCalendar({
			customButtons: {
				print: {
					text: 'print',
					click: function() {
						allow_print_submit = true;
						$('#button_print').click();
					}
				},
				reload: {
					text: 'reload',
					click: function() {
						cal.fullCalendar('refetchEvents');
					}
				}
			},
			header: {
				left: 'prev,next prevYear,nextYear today reload',
				center: 'title',
				right: 'print month,listMonth agendaWeek,listWeek agendaDay'
			},
			editable: true,
			weekNumbers: true,
			eventLimit: false,
			navLinks: true,
			lazyFetching: false,
			displayEventEnd: true,
			height: 'auto',
			contentHeight: 'auto',
			events: function(start, end, tz, cb) {
				if(!toolbar) {
					toolbar = cal.find('.fc-toolbar');
				}
				needs_refresh = false;
				var d = cal.fullCalendar('getDate');
				date.val(d.format('M/D/YYYY'));
				$('#filter_date_from').val(start.format('M/D/YYYY'));
				$('#filter_date_to').val(end.format('M/D/YYYY'));
				$('#filter_view').val(current_view);
				toolbar.addClass('busy-bg');
				$.ajax({
					url: '<%= url_for action: :data %>',
					data: filter.serialize(),
					success: function(data, status, xhr) {
						cb(data);
					},
					complete: function(xhr, status) {
						toolbar.removeClass('busy-bg');
					},
					error: function(xhr, status, error) {
					}
				});
			},
			eventDrop: edit_event,
			eventResize: edit_event,
			eventClick: function(event, e, view) {
				window.open(event.url, '_blank');
				return false;
    	},
    	viewRender: function(view, element) {
    		current_view = view.name;
    		$('#filter_view').val(current_view);
    	}
		});
		filter.submit(function(e) {
			if(!allow_print_submit) {
				e.preventDefault(); 
				allow_print_submit = false;
			}
		});
		var set_new_res_link = function() {
			var d = moment(date.val());
			$('#new-res').prop('href',
				$('#new-res').prop('href').split('?')[0] + (d.isValid() ? '?obj%5Bnew_schedules%5D%5B0%5D%5Bdates%5D=' + d.format('YYYY-MM-DD') : '')
			);
		}
		set_new_res_link();
		filter.find('input, select').change(function(e) {
			needs_refresh = true;
			var d = moment(date.val());
			if(d.isValid()) {
				cal.fullCalendar('gotoDate', d);
			}
			else {
				d = cal.fullCalendar('getDate');
				date.val(d.format('M/D/YYYY'));
			}
			set_new_res_link();
			if(needs_refresh) {
				cal.fullCalendar('refetchEvents');
			}
		});
	});
</script>